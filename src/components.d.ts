/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MatchResults, RouterHistory } from "@stencil/router";
import { IList } from "./interfaces/list.interface";
export namespace Components {
    interface AppRoot {
    }
    interface AppSidenav {
        "history": RouterHistory;
    }
    interface AppTaskViewPane {
    }
    interface ListOptions {
    }
    interface ListView {
        "history": RouterHistory;
        "match": MatchResults;
    }
    interface ListViewHeader {
        "listData": IList;
    }
    interface NewTaskInput {
    }
    interface ThemeSelector {
    }
}
declare global {
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppSidenavElement extends Components.AppSidenav, HTMLStencilElement {
    }
    var HTMLAppSidenavElement: {
        prototype: HTMLAppSidenavElement;
        new (): HTMLAppSidenavElement;
    };
    interface HTMLAppTaskViewPaneElement extends Components.AppTaskViewPane, HTMLStencilElement {
    }
    var HTMLAppTaskViewPaneElement: {
        prototype: HTMLAppTaskViewPaneElement;
        new (): HTMLAppTaskViewPaneElement;
    };
    interface HTMLListOptionsElement extends Components.ListOptions, HTMLStencilElement {
    }
    var HTMLListOptionsElement: {
        prototype: HTMLListOptionsElement;
        new (): HTMLListOptionsElement;
    };
    interface HTMLListViewElement extends Components.ListView, HTMLStencilElement {
    }
    var HTMLListViewElement: {
        prototype: HTMLListViewElement;
        new (): HTMLListViewElement;
    };
    interface HTMLListViewHeaderElement extends Components.ListViewHeader, HTMLStencilElement {
    }
    var HTMLListViewHeaderElement: {
        prototype: HTMLListViewHeaderElement;
        new (): HTMLListViewHeaderElement;
    };
    interface HTMLNewTaskInputElement extends Components.NewTaskInput, HTMLStencilElement {
    }
    var HTMLNewTaskInputElement: {
        prototype: HTMLNewTaskInputElement;
        new (): HTMLNewTaskInputElement;
    };
    interface HTMLThemeSelectorElement extends Components.ThemeSelector, HTMLStencilElement {
    }
    var HTMLThemeSelectorElement: {
        prototype: HTMLThemeSelectorElement;
        new (): HTMLThemeSelectorElement;
    };
    interface HTMLElementTagNameMap {
        "app-root": HTMLAppRootElement;
        "app-sidenav": HTMLAppSidenavElement;
        "app-task-view-pane": HTMLAppTaskViewPaneElement;
        "list-options": HTMLListOptionsElement;
        "list-view": HTMLListViewElement;
        "list-view-header": HTMLListViewHeaderElement;
        "new-task-input": HTMLNewTaskInputElement;
        "theme-selector": HTMLThemeSelectorElement;
    }
}
declare namespace LocalJSX {
    interface AppRoot {
    }
    interface AppSidenav {
        "history"?: RouterHistory;
    }
    interface AppTaskViewPane {
    }
    interface ListOptions {
    }
    interface ListView {
        "history"?: RouterHistory;
        "match"?: MatchResults;
    }
    interface ListViewHeader {
        "listData": IList;
    }
    interface NewTaskInput {
    }
    interface ThemeSelector {
    }
    interface IntrinsicElements {
        "app-root": AppRoot;
        "app-sidenav": AppSidenav;
        "app-task-view-pane": AppTaskViewPane;
        "list-options": ListOptions;
        "list-view": ListView;
        "list-view-header": ListViewHeader;
        "new-task-input": NewTaskInput;
        "theme-selector": ThemeSelector;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-sidenav": LocalJSX.AppSidenav & JSXBase.HTMLAttributes<HTMLAppSidenavElement>;
            "app-task-view-pane": LocalJSX.AppTaskViewPane & JSXBase.HTMLAttributes<HTMLAppTaskViewPaneElement>;
            "list-options": LocalJSX.ListOptions & JSXBase.HTMLAttributes<HTMLListOptionsElement>;
            "list-view": LocalJSX.ListView & JSXBase.HTMLAttributes<HTMLListViewElement>;
            "list-view-header": LocalJSX.ListViewHeader & JSXBase.HTMLAttributes<HTMLListViewHeaderElement>;
            "new-task-input": LocalJSX.NewTaskInput & JSXBase.HTMLAttributes<HTMLNewTaskInputElement>;
            "theme-selector": LocalJSX.ThemeSelector & JSXBase.HTMLAttributes<HTMLThemeSelectorElement>;
        }
    }
}
